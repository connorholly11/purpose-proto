"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai-companion/page",{

/***/ "(app-pages-browser)/./src/app/ai-companion/page.tsx":
/*!***************************************!*\
  !*** ./src/app/ai-companion/page.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AICompanionPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components */ \"(app-pages-browser)/./src/components/index.ts\");\n/* harmony import */ var _components_AppHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/AppHeader */ \"(app-pages-browser)/./src/components/AppHeader.tsx\");\n/* harmony import */ var _context_ChatContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../context/ChatContext */ \"(app-pages-browser)/./src/context/ChatContext.tsx\");\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./page.module.css */ \"(app-pages-browser)/./src/app/ai-companion/page.module.css\");\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_page_module_css__WEBPACK_IMPORTED_MODULE_5__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction AICompanionPage() {\n    _s();\n    const [inputText, setInputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { isAdminMode } = (0,_components_AppHeader__WEBPACK_IMPORTED_MODULE_3__.useAdminMode)();\n    // Use the ChatContext instead of local state\n    const { messages, loading, error, sendMessage } = (0,_context_ChatContext__WEBPACK_IMPORTED_MODULE_4__.useChatContext)();\n    // Load initial greeting if no messages exist\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (messages.length === 0) {\n            // Check if there are no messages and add a welcome message\n            const welcomeMessage = {\n                id: \"welcome-1\",\n                content: \"Hello! I'm your AI companion. How can I help you today?\",\n                role: \"assistant\",\n                createdAt: new Date().toISOString()\n            };\n            // This is a hack to add the first message - in a real implementation, \n            // we might want to refactor the ChatContext to handle this case\n            sendMessage(\"\", undefined, false, false).catch((err)=>console.error(\"Error initializing chat:\", err));\n        }\n    }, [\n        messages,\n        sendMessage\n    ]);\n    const handleSend = ()=>{\n        if (inputText.trim() && !loading) {\n            // Use the ChatContext's sendMessage function\n            sendMessage(inputText);\n            setInputText(\"\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().messagesContainer),\n                children: [\n                    messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"\".concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().messageBubble), \" \").concat(message.role === \"user\" ? (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().userMessage) : (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().assistantMessage)),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Surface, {\n                                    className: \"\".concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().messageContent), \" \").concat(message.role === \"user\" ? (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().userContent) : (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().assistantContent)),\n                                    elevation: 1,\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                        children: message.content\n                                    }, void 0, false, {\n                                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                        lineNumber: 59,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                    lineNumber: 55,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                    className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().timestamp),\n                                    children: new Date(message.createdAt).toLocaleTimeString([], {\n                                        hour: \"2-digit\",\n                                        minute: \"2-digit\"\n                                    })\n                                }, void 0, false, {\n                                    fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                    lineNumber: 61,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, message.id, true, {\n                            fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                            lineNumber: 51,\n                            columnNumber: 11\n                        }, this)),\n                    loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"\".concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().messageBubble), \" \").concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().assistantMessage)),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Surface, {\n                            className: \"\".concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().messageContent), \" \").concat((_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().assistantContent)),\n                            elevation: 1,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().loadingIndicator),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().loadingDot)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                        lineNumber: 71,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().loadingDot)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                        lineNumber: 72,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().loadingDot)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                                lineNumber: 70,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 68,\n                        columnNumber: 11\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().errorContainer),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                            color: \"error\",\n                            children: [\n                                \"Error: \",\n                                error\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                            lineNumber: 81,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 80,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                lineNumber: 49,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().inputContainer),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.TextInput, {\n                        value: inputText,\n                        onChange: (e)=>setInputText(e.target.value),\n                        placeholder: \"Type a message...\",\n                        multiline: true,\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().input),\n                        onKeyDown: (e)=>{\n                            if (e.key === \"Enter\" && !e.shiftKey) {\n                                e.preventDefault();\n                                handleSend();\n                            }\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 87,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.IconButton, {\n                        icon: \"arrow-up\",\n                        color: \"#007AFF\",\n                        size: 24,\n                        onClick: handleSend,\n                        disabled: !inputText.trim() || loading,\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().sendButton)\n                    }, void 0, false, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 100,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, this),\n            isAdminMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Card, {\n                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().adminPanel),\n                title: \"Admin Controls\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                        children: \"Additional controls would appear here for admins.\"\n                    }, void 0, false, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 112,\n                        columnNumber: 11\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                        color: \"error\",\n                        children: [\n                            \"Last Error: \",\n                            error\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                        lineNumber: 113,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n                lineNumber: 111,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/app/ai-companion/page.tsx\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, this);\n}\n_s(AICompanionPage, \"3Dy1CWCw9DfqxfpvIIG++0xwQvY=\", false, function() {\n    return [\n        _components_AppHeader__WEBPACK_IMPORTED_MODULE_3__.useAdminMode,\n        _context_ChatContext__WEBPACK_IMPORTED_MODULE_4__.useChatContext\n    ];\n});\n_c = AICompanionPage;\nvar _c;\n$RefreshReg$(_c, \"AICompanionPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ai-companion/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/ChatContext.tsx":
/*!*************************************!*\
  !*** ./src/context/ChatContext.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatProvider: function() { return /* binding */ ChatProvider; },\n/* harmony export */   useChatContext: function() { return /* binding */ useChatContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useApi */ \"(app-pages-browser)/./src/hooks/useApi.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n // Import the hook\n// Create the context with default values\nconst ChatContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    messages: [],\n    loading: false,\n    error: null,\n    debugInfo: null,\n    conversationId: null,\n    currentModel: null,\n    conversationCost: 0,\n    sendMessage: async ()=>{},\n    clearMessages: ()=>{},\n    startNewConversation: ()=>{}\n});\n// ChatProvider component to wrap the app with chat functionality\n// Helper function to calculate cost based on model and token count\nconst calculateCost = (modelName, inputTokens, outputTokens)=>{\n    // Convert tokens to millions for calculation\n    const inputMillions = inputTokens / 1000000;\n    const outputMillions = outputTokens / 1000000;\n    // Set rates based on model\n    if (modelName.toLowerCase().includes(\"claude\")) {\n        // Claude 3.5 Sonnet pricing\n        const inputRate = 3; // $3 per million tokens\n        const outputRate = 15; // $15 per million tokens\n        return inputMillions * inputRate + outputMillions * outputRate;\n    } else if (modelName.toLowerCase().includes(\"gpt\")) {\n        // GPT-4 pricing\n        const inputRate = 2.5; // $2.50 per million tokens\n        const outputRate = 10; // $10 per million tokens\n        return inputMillions * inputRate + outputMillions * outputRate;\n    }\n    // Default pricing for unknown models\n    return 0;\n};\n// Estimate token count for English text\nconst estimateTokenCount = (text)=>{\n    // Simple estimate: ~3/4 token per word for English\n    const wordCount = text.split(/\\s+/).length;\n    return Math.ceil(wordCount * 1.33);\n};\nconst ChatProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [debugInfo, setDebugInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // State for debug info\n    const [conversationId, setConversationId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Track current conversation ID\n    const [currentModel, setCurrentModel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Track current model\n    const [conversationCost, setConversationCost] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Track conversation cost\n    // API instance\n    const api = (0,_hooks_useApi__WEBPACK_IMPORTED_MODULE_2__.useApi)(); // Use the hook\n    // Send a message to the AI and get a response\n    const sendMessage = async function(content, overridePromptId) {\n        let requestDebugInfo = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, useContext = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true // <-- Receive context toggle option (default to true)\n        ;\n        // Don't send if already loading\n        if (loading) {\n            console.log(\"[ChatContext] Skipping message send - already loading\");\n            return;\n        }\n        console.log(\"[ChatContext] Preparing to send message:\\n    - Content length: \".concat(content.length, \" chars\\n    - Override Prompt ID: \").concat(overridePromptId || \"None\", \"\\n    - Request Debug Info: \").concat(requestDebugInfo, \"\\n    - Use Context: \").concat(useContext, \"\\n    - Current Conversation ID: \").concat(conversationId || \"New conversation\"));\n        try {\n            var _response_debugInfo, _response_debugInfo1;\n            setLoading(true);\n            setError(null);\n            setDebugInfo(null); // Clear previous debug info\n            // Generate unique ID for user message with added randomness\n            const userMessageId = \"user-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).slice(2));\n            console.log(\"[ChatContext] Generated user message ID: \".concat(userMessageId));\n            // Estimate token count for user message\n            const estimatedUserTokens = estimateTokenCount(content);\n            // Create user message object with token count\n            const userMessage = {\n                id: userMessageId,\n                content,\n                role: \"user\",\n                createdAt: new Date().toISOString(),\n                tokenCount: {\n                    input: estimatedUserTokens\n                },\n                modelName: currentModel || undefined\n            };\n            // Add user message to the messages array immediately\n            console.log(\"[ChatContext] Adding user message to UI\");\n            setMessages((prevMessages)=>{\n                const newMessages = [\n                    ...prevMessages,\n                    userMessage\n                ];\n                console.log(\"[ChatContext] After adding user message - array size: \".concat(newMessages.length));\n                return newMessages;\n            });\n            // Make the API call to get a response, passing debug options and conversationId\n            console.log(\"[ChatContext] Calling API to send message\");\n            console.log('[ChatContext] User message content: \"'.concat(content, '\"'));\n            // Set requestDebugInfo to true to get system prompt and model info\n            const enhancedDebugInfo = true;\n            const response = await api.chat.sendMessage(content, overridePromptId, enhancedDebugInfo, useContext, conversationId // <-- Pass the current conversation ID (null for new)\n            );\n            console.log(\"[ChatContext] Response received:\\n      - Response length: \".concat(response.reply.length, \" chars\\n      - Conversation ID: \").concat(response.conversationId, \"\\n      - Is New Conversation: \").concat(response.isNewConversation, \"\\n      - Debug info included: \").concat(Boolean(response.debugInfo)));\n            // Log AI response content for debugging\n            console.log('[ChatContext] AI response: \"'.concat(response.reply.substring(0, 100)).concat(response.reply.length > 100 ? \"...\" : \"\", '\"'));\n            // Log system prompt and model information if available\n            if (response.debugInfo) {\n                var _response_debugInfo_conversation;\n                console.log('[ChatContext] System prompt: \"'.concat(response.debugInfo.systemPromptUsedName, '\"'));\n                console.log('[ChatContext] Model used: \"'.concat(response.debugInfo.modelName || \"Default model\", '\"'));\n                console.log(\"[ChatContext] Conversation history: \".concat(((_response_debugInfo_conversation = response.debugInfo.conversation) === null || _response_debugInfo_conversation === void 0 ? void 0 : _response_debugInfo_conversation.messageCount) || 0, \" previous messages\"));\n                // Log if context was injected\n                if (response.debugInfo.summaryContextInjected) {\n                    console.log(\"[ChatContext] Context injected: Yes (\".concat(response.debugInfo.summaryContextInjected.length, \" chars)\"));\n                } else {\n                    console.log(\"[ChatContext] Context injected: No\");\n                }\n            }\n            // Always update conversationId from response to ensure consistency\n            console.log(\"[ChatContext] \".concat(!conversationId ? \"Setting\" : \"Updating\", \" conversation ID to: \").concat(response.conversationId));\n            setConversationId(response.conversationId);\n            // Log if this is a new conversation for debugging\n            if (response.isNewConversation) {\n                console.log(\"[ChatContext] Server indicated this is a new conversation\");\n            }\n            // Update current model if available in debug info\n            if ((_response_debugInfo = response.debugInfo) === null || _response_debugInfo === void 0 ? void 0 : _response_debugInfo.modelName) {\n                console.log(\"[ChatContext] Setting current model to: \".concat(response.debugInfo.modelName));\n                setCurrentModel(response.debugInfo.modelName);\n            }\n            // Estimate token count for AI response\n            const estimatedOutputTokens = estimateTokenCount(response.reply);\n            // Create AI message object with token count\n            const aiMessage = {\n                id: \"assistant-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).slice(2)),\n                content: response.reply,\n                role: \"assistant\",\n                createdAt: new Date().toISOString(),\n                tokenCount: {\n                    output: estimatedOutputTokens\n                },\n                modelName: ((_response_debugInfo1 = response.debugInfo) === null || _response_debugInfo1 === void 0 ? void 0 : _response_debugInfo1.modelName) || currentModel || undefined\n            };\n            // Safely update conversation cost using a try-catch to handle any errors\n            try {\n                var _response_debugInfo2, _response_debugInfo3;\n                // Update conversation cost if we have debug info with cost estimate\n                if ((_response_debugInfo2 = response.debugInfo) === null || _response_debugInfo2 === void 0 ? void 0 : _response_debugInfo2.costEstimate) {\n                    var _response_debugInfo4;\n                    const messageCost = response.debugInfo.costEstimate;\n                    console.log(\"[ChatContext] Server message cost estimate: $\".concat(messageCost.toFixed(6)));\n                    if ((_response_debugInfo4 = response.debugInfo) === null || _response_debugInfo4 === void 0 ? void 0 : _response_debugInfo4.tokenUsage) {\n                        console.log(\"[ChatContext] Token usage: \".concat(response.debugInfo.tokenUsage.promptTokens, \" prompt tokens, \").concat(response.debugInfo.tokenUsage.completionTokens, \" completion tokens\"));\n                    }\n                    // Update total conversation cost\n                    setConversationCost((prevCost)=>{\n                        const newCost = prevCost + messageCost;\n                        console.log(\"[ChatContext] Updated conversation cost: $\".concat(newCost.toFixed(6)));\n                        return newCost;\n                    });\n                } else if (((_response_debugInfo3 = response.debugInfo) === null || _response_debugInfo3 === void 0 ? void 0 : _response_debugInfo3.modelName) || currentModel) {\n                    var _response_debugInfo5;\n                    const modelToUse = ((_response_debugInfo5 = response.debugInfo) === null || _response_debugInfo5 === void 0 ? void 0 : _response_debugInfo5.modelName) || currentModel || \"\";\n                    const inputTokens = estimatedUserTokens;\n                    const outputTokens = estimatedOutputTokens;\n                    // Calculate message cost\n                    const messageCost = calculateCost(modelToUse, inputTokens, outputTokens);\n                    console.log(\"[ChatContext] Client message cost estimate: $\".concat(messageCost.toFixed(6), \" (\").concat(inputTokens, \" input tokens, \").concat(outputTokens, \" output tokens)\"));\n                    // Update total conversation cost\n                    setConversationCost((prevCost)=>{\n                        const newCost = prevCost + messageCost;\n                        console.log(\"[ChatContext] Updated conversation cost: $\".concat(newCost.toFixed(6)));\n                        return newCost;\n                    });\n                } else {\n                    // If we can't estimate cost, just log a message\n                    console.log(\"[ChatContext] Unable to estimate message cost - insufficient data\");\n                }\n            } catch (costError) {\n                // If anything goes wrong in cost calculation, just log and continue\n                console.error(\"[ChatContext] Error calculating message cost:\", costError);\n            }\n            // Add AI message to the messages array\n            console.log(\"[ChatContext] Adding AI response to UI\");\n            setMessages((prevMessages)=>{\n                const newMessages = [\n                    ...prevMessages,\n                    aiMessage\n                ];\n                console.log(\"[ChatContext] Updated messages array size: \".concat(newMessages.length));\n                console.log(\"[ChatContext] Latest message ID: \".concat(aiMessage.id));\n                return newMessages;\n            });\n            // Set debug info if requested and received\n            if (requestDebugInfo && response.debugInfo) {\n                console.log(\"[ChatContext] Setting debug info in state\");\n                setDebugInfo(response.debugInfo);\n            }\n        } catch (err) {\n            var _err_response_data, _err_response;\n            console.error(\"[ChatContext] Error sending message:\", err);\n            const errorMessage = ((_err_response = err.response) === null || _err_response === void 0 ? void 0 : (_err_response_data = _err_response.data) === null || _err_response_data === void 0 ? void 0 : _err_response_data.message) || err.message || \"Failed to get a response from the AI. Please try again.\";\n            console.error(\"[ChatContext] Setting error: \".concat(errorMessage));\n            setError(errorMessage);\n        // Optionally remove the user message if the API call failed\n        // setMessages(prevMessages => prevMessages.filter(msg => msg.id !== userMessageId));\n        } finally{\n            console.log(\"[ChatContext] Message exchange complete, setting loading to false\");\n            setLoading(false);\n        }\n    };\n    // Clear all messages\n    const clearMessages = ()=>{\n        setMessages([]);\n        setError(null);\n        setDebugInfo(null); // Clear debug info as well\n    };\n    // Start a new conversation\n    const startNewConversation = ()=>{\n        console.log(\"[ChatContext] Starting new conversation - resetting state\");\n        console.log(\"[ChatContext] Previous conversation ID: \".concat(conversationId || \"None\"));\n        setConversationId(null); // This will signal the backend to start a fresh conversation\n        setMessages([]); // Clear the UI\n        setError(null);\n        setDebugInfo(null);\n        setConversationCost(0); // Reset conversation cost\n        // Keep the current model info for the next conversation\n        console.log(\"[ChatContext] State reset complete for new conversation\");\n    };\n    // Context value\n    const value = {\n        messages,\n        loading,\n        debugInfo,\n        error,\n        conversationId,\n        currentModel,\n        conversationCost,\n        sendMessage,\n        clearMessages,\n        startNewConversation\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChatContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/connorholly/Downloads/purpose/gemini-plan-proto/frontend/src/context/ChatContext.tsx\",\n        lineNumber: 354,\n        columnNumber: 10\n    }, undefined);\n};\n_s(ChatProvider, \"qpAj09b2F97ctlymJtOm/HwzSKU=\", false, function() {\n    return [\n        _hooks_useApi__WEBPACK_IMPORTED_MODULE_2__.useApi\n    ];\n});\n_c = ChatProvider;\n// Custom hook to use the chat context\nconst useChatContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ChatContext);\n};\n_s1(useChatContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChatContext);\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/ChatContext.tsx\n"));

/***/ })

});